#summary Requirements and procedure.

== Introduction ==
SocialConnect is available as a Django application. First install it in your project by adding the application in your settings.py:

{{{
INSTALLED_APPS = (
    [...],	
    'socialconnect',
    [...],
)
}}}


SocialConnect uses database for storage so you need to create the table with a "syncdb" command. The application comes with fixtures for Facebook, MySpace and Partuza support.

To be able to communicate with the API of an external platform, SocialConnect needs an API key and secret. They are usually delivered by the platform, so you have to create a application on the developer webpage of the platform.

So to be able to use SocialConnect with Facebook, MySpace and Partuza, you first have to create an application on each of those platforms to get an API key and secret. Then you have to use the Django admin to add the keys and secrets to these platforms.


== Requirements ==
 * Python 2.5
 * Django revision 9843

SocialConnect also requires several external libraries:

 * [http://pyfacebook.googlecode.com pyFacebook] (revision 173)
 * [http://opensocial-python-rest-library.googlecode.com opensocial-python-rest-library] (last revision)
 * [http://microapps.sourceforge.net/restclient/ restclient] (version 0.9.9)
 * [http://oauth.googlecode.com/ oauth] (revision 868)

Install them as usual and be sure that they are available within your Django project.

== SocialConnect views ==
Despite the fact that SocialConnect doesn't display anything to users directly, it has some views that need to be accessible. Those views are the callback view after a redirection to a remote platform. So in the urls.py file of your project, you have to add access to the SocialConnect view:

{{{
urlpatterns = patterns('',
   	url(r'^admin/(.*)', admin.site.root),
	(r'^socialconnect/', include('portabilitytest.socialconnect.urls')),
	(r'^yasn/', include('portabilitytest.yasn.urls')),			
)
}}}

== API Calls ==